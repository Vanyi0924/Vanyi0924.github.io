import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.Ci4AqDqK.js";const _=JSON.parse('{"title":"Solidity学习-2","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Web3/Solidity学习-2.md","filePath":"articles/Web3/Solidity学习-2.md"}'),i={name:"articles/Web3/Solidity学习-2.md"},o=r('<h1 id="solidity学习-2" tabindex="-1">Solidity学习-2 <a class="header-anchor" href="#solidity学习-2" aria-label="Permalink to &quot;Solidity学习-2&quot;">​</a></h1><h2 id="一、mapping-映射" tabindex="-1">一、mapping（映射） <a class="header-anchor" href="#一、mapping-映射" aria-label="Permalink to &quot;一、mapping（映射）&quot;">​</a></h2><p>只能作为状态变量，不能在函数体内部使用。 <a href="https://github.com/ethereum/dapp-bin" target="_blank" rel="noreferrer">https://github.com/ethereum/dapp-bin</a></p><h2 id="二、struct-结构体" tabindex="-1">二、Struct （结构体） <a class="header-anchor" href="#二、struct-结构体" aria-label="Permalink to &quot;二、Struct （结构体）&quot;">​</a></h2><p>不能将自己作为类型之一，但是可以放在 <code>mapping</code> 中，如果结构体重，存在<code>mapping</code>需要跳过。</p><h2 id="三、类型转换" tabindex="-1">三、类型转换 <a class="header-anchor" href="#三、类型转换" aria-label="Permalink to &quot;三、类型转换&quot;">​</a></h2><p>隐式转换 显式转换 <code>delete</code>重置变量</p><h2 id="四、日期时间" tabindex="-1">四、日期时间 <a class="header-anchor" href="#四、日期时间" aria-label="Permalink to &quot;四、日期时间&quot;">​</a></h2><p><code>now</code> 当前时间戳 <code>using DateTime for uint</code><a href="https://github.com/pipermerriam/ethereum-datetime" target="_blank" rel="noreferrer">https://github.com/pipermerriam/ethereum-datetime</a></p><h2 id="五、错误异常" tabindex="-1">五、错误异常 <a class="header-anchor" href="#五、错误异常" aria-label="Permalink to &quot;五、错误异常&quot;">​</a></h2><ol><li><p><code>assert</code> 用于检查溢出错误 用于检查不应该发生的异常情况 用于检查合约状态改变后，合约的状态 尽量少用<code>assert</code> 通常用于函数中间或结尾</p></li><li><p><code>require</code> 用于检查用户输入； 用于检查合约调用后返回值； 用于检查状态 用于函数开头</p></li><li><p><code>revert</code> 终止执行并还原改变的状态，revert(string reasion)，提供错误信息。</p></li></ol><h2 id="六、销毁合约" tabindex="-1">六、销毁合约 <a class="header-anchor" href="#六、销毁合约" aria-label="Permalink to &quot;六、销毁合约&quot;">​</a></h2><p><code>selfdestruct(owner)</code> 合约创建者才能销毁合约，需要小心使用，避免被主调合约调用。</p>',13),d=[o];function c(l,n,h,s,p,m){return t(),a("div",null,d)}const b=e(i,[["render",c]]);export{_ as __pageData,b as default};
