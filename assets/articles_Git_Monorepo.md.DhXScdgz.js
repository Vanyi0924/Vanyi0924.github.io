import{_ as o,c as e,o as r,a4 as a}from"./chunks/framework.C5pyVv65.js";const u=JSON.parse('{"title":"Monorepo","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Git/Monorepo.md","filePath":"articles/Git/Monorepo.md"}'),t={name:"articles/Git/Monorepo.md"},n=a('<h1 id="monorepo" tabindex="-1">Monorepo <a class="header-anchor" href="#monorepo" aria-label="Permalink to &quot;Monorepo&quot;">​</a></h1><p>Monorepo 是一种项目代码管理方式，指单个仓库中管理多个项目，有助于简化代码共享、版本控制、构建和部署等方面的复杂性，并提供更好的可重用性和协作性。Monorepo 提倡了开放、透明、共享的组织文化。</p><h2 id="monorepo-的优势" tabindex="-1">monorepo 的优势 <a class="header-anchor" href="#monorepo-的优势" aria-label="Permalink to &quot;monorepo 的优势&quot;">​</a></h2><ul><li>便捷的代码复用</li><li>统一基础建设</li><li>增量构建</li></ul><h2 id="monorepo的问题" tabindex="-1">monorepo的问题 <a class="header-anchor" href="#monorepo的问题" aria-label="Permalink to &quot;monorepo的问题&quot;">​</a></h2><ul><li>占用更多存储空间</li><li>较长的依赖安装时间</li><li>幽灵依赖和依赖版本冲突</li><li>项目之间不存在边界</li></ul><p><a href="https://juejin.cn/post/7291133485845823525" target="_blank" rel="noreferrer">参考资料</a></p>',7),i=[n];function l(p,s,c,_,h,d){return r(),e("div",null,i)}const f=o(t,[["render",l]]);export{u as __pageData,f as default};
