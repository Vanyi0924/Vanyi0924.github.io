import{_ as e,c as a,o as s,a4 as n}from"./chunks/framework.CQUZ9zPN.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/运维/openssl 生成自签证书自定义.md","filePath":"articles/运维/openssl 生成自签证书自定义.md"}'),c={name:"articles/运维/openssl 生成自签证书自定义.md"},o=n(`<h2 id="生成ca证书" tabindex="-1">生成CA证书 <a class="header-anchor" href="#生成ca证书" aria-label="Permalink to &quot;生成CA证书&quot;">​</a></h2><ol><li><p>创建自签证书私钥 <code>openssl genrsa -out ca.key 1024</code></p></li><li><p>创建证书请求文件 <code>openssl req -new -out ca.csr -key ca.key</code> 注：如需要用此证书签发证书，请记住填写的信息</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Country Name (2 letter code) []:xx</span></span>
<span class="line"><span>State or Province Name (full name) []:xx</span></span>
<span class="line"><span>Locality Name (eg, city) [Default City]:xxx</span></span>
<span class="line"><span>Organization Name (eg, company) [Default Company Ltd]:xxxx</span></span>
<span class="line"><span>Organizational Unit Name (eg, section) []:xxx</span></span>
<span class="line"><span>Common Name (eg, your name or your servers hostname) []:xxx</span></span>
<span class="line"><span>Email Address []:xxx</span></span>
<span class="line"><span>A challenge password []:xxx</span></span>
<span class="line"><span>An optional company name []:xxx</span></span></code></pre></div><ol start="3"><li>通过<code>key</code>与<code>csr</code>文件生成ca证书 <code>openssl x509 -req -in ca.csr -out ca.crt -signkey ca.key -CAcreateserial -days 365</code></li></ol><h2 id="ca证书签发客户端或服务端证书" tabindex="-1">CA证书签发客户端或服务端证书 <a class="header-anchor" href="#ca证书签发客户端或服务端证书" aria-label="Permalink to &quot;CA证书签发客户端或服务端证书&quot;">​</a></h2><p>注：以签发客户端（除去步骤4，其他服务端相同）证书为例：</p><ol><li>生成私钥：<code>openssl genrsa -out client.key 1024</code></li><li>生成请求文件，信息与CA证书保持一致，<code>Common Name</code>填写要使用域名： <code>openssl req -new -out client.csr -key client.key</code></li><li>生成经过<code>CA</code>证书签名的客户端证书： <code>openssl x509 -req -in client.csr -out client.crt -signkey client.key -CA ca.crt -CAkey ca.key -CAcreateserial -days 365</code></li><li>生成适用于浏览器包含公私钥的证书 ：<code>openssl pkcs12 -export -clcerts -in client.crt -inkey client.key -out client.p12</code></li></ol>`,7),l=[o];function t(i,p,r,d,_,x){return s(),a("div",null,l)}const u=e(c,[["render",t]]);export{y as __pageData,u as default};
