import{_ as a,c as e,o as r,a4 as t}from"./chunks/framework.Ci4AqDqK.js";const u=JSON.parse('{"title":"script 标签","description":"","frontmatter":{},"headers":[],"relativePath":"articles/HTML/script.md","filePath":"articles/HTML/script.md"}'),i={name:"articles/HTML/script.md"},l=t('<h1 id="script-标签" tabindex="-1">script 标签 <a class="header-anchor" href="#script-标签" aria-label="Permalink to &quot;script 标签&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>HTML <code>&lt;script&gt;</code> 元素用于嵌入可执行代码或数据，这通常用作嵌入或者引用 JavaScript 代码。</p><h2 id="部分重要属性" tabindex="-1">部分重要属性 <a class="header-anchor" href="#部分重要属性" aria-label="Permalink to &quot;部分重要属性&quot;">​</a></h2><h3 id="async" tabindex="-1">async <a class="header-anchor" href="#async" aria-label="Permalink to &quot;async&quot;">​</a></h3><ul><li>对于普通脚本，如果存在 async 属性，那么普通脚本会被并行请求，并尽快解析和执行。</li><li>对于模块脚本，如果存在 async 属性，那么脚本及其所有依赖都会在延缓队列中执行，因此它们会被并行请求，并尽快解析和执行。</li></ul><h3 id="defer" tabindex="-1">defer <a class="header-anchor" href="#defer" aria-label="Permalink to &quot;defer&quot;">​</a></h3><p>这个布尔属性的设置是为了向浏览器表明，该脚本是要在文档被解析后，但在触发 DOMContentLoaded 事件之前执行的。</p><p>包含 defer 属性的脚本将阻塞 DOMContentLoaded 事件触发，直到脚本完成加载并执行。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer">参考资料</a></p><h2 id="javascript-模块" tabindex="-1">JavaScript 模块 <a class="header-anchor" href="#javascript-模块" aria-label="Permalink to &quot;JavaScript 模块&quot;">​</a></h2><h3 id="其他模块与标准脚本的不同" tabindex="-1">其他模块与标准脚本的不同 <a class="header-anchor" href="#其他模块与标准脚本的不同" aria-label="Permalink to &quot;其他模块与标准脚本的不同&quot;">​</a></h3><ul><li>你需要注意本地测试——如果你通过本地加载 HTML 文件（比如一个 file:// 路径的文件），你将会遇到 CORS 错误，因为 JavaScript 模块安全性需要。你需要通过一个服务器来测试。</li><li>另请注意，你可能会从模块内部定义的脚本部分获得与标准脚本中不同的行为。这是因为模块自动使用严格模式。</li><li>加载一个模块脚本时不需要使用 defer 属性模块会自动延迟加载。</li><li>最后一个但不是不重要，你需要明白模块功能导入到单独的脚本文件的范围——他们无法在全局获得。因此，你只能在导入这些功能的脚本文件中使用他们，你也无法通过 JavaScript console 中获取到他们，比如，在 DevTools 中你仍然能够获取到语法错误，但是你可能无法像你想的那样使用一些 debug 技术。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules#%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9D%97%E4%B8%8E%E6%A0%87%E5%87%86%E8%84%9A%E6%9C%AC%E7%9A%84%E4%B8%8D%E5%90%8C" target="_blank" rel="noreferrer">参考资料</a></li></ul>',13),o=[l];function c(s,n,d,h,p,_){return r(),e("div",null,o)}const b=a(i,[["render",c]]);export{u as __pageData,b as default};
