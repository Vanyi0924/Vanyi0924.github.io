import{_ as s,c as a,o as i,a4 as n}from"./chunks/framework.C5pyVv65.js";const g=JSON.parse('{"title":"DApp 授权","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Web3/DApp 授权.md","filePath":"articles/Web3/DApp 授权.md"}'),e={name:"articles/Web3/DApp 授权.md"},t=n(`<h1 id="dapp-授权" tabindex="-1">DApp 授权 <a class="header-anchor" href="#dapp-授权" aria-label="Permalink to &quot;DApp 授权&quot;">​</a></h1><h2 id="一、dapp-与-以太坊-eth-钱包授权、交互" tabindex="-1">一、DApp 与 以太坊（ETH）钱包授权、交互 <a class="header-anchor" href="#一、dapp-与-以太坊-eth-钱包授权、交互" aria-label="Permalink to &quot;一、DApp 与 以太坊（ETH）钱包授权、交互&quot;">​</a></h2><p><a href="https://learnblockchain.cn/docs/web3.js/getting-started.html" target="_blank" rel="noreferrer">web3官方文档 v1.2.6</a></p><blockquote><p>支持以太坊的浏览器如 Mist 或 MetaMask 会有提供一个 <code>ethereumProvider</code> 或 <code>web3.currentProvider</code> 。对于 web3.js 来说，可以检查 Web3.givenProvider ，如果属性为 null 再连接本地或远程的节点。</p></blockquote><p><a href="https://web3js.readthedocs.io/en/v1.3.0/getting-started.html" target="_blank" rel="noreferrer">web3官方文档 v1.3.0</a></p><blockquote><p>Most Ethereum-supported browsers like MetaMask have an EIP-1193 compliant provider available at <code>window.ethereum</code>.For web3.js, check Web3.givenProvider.</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Web3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;web3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> web3Instance;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * 该函数应在页面加载完成后调用</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * js --&gt; onload</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * vue --&gt; mounted</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * react --&gt; useEffect</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * 通过 web3Instance 可与钱包进行交互 https://web3js.readthedocs.io/en/v1.3.0/getting-started.html</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initWeb3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 判断是否有web3实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.web3) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    web3Instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Web3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window.web3.currentProvider);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    web3Instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Web3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Web3.givenProvider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> YOUR_RPC_ADDRESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 判断是否有 ethereum</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (window.ethereum) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 函数中 可以使用 async/await 关键字调用</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // accounts 为获取的钱包账号数组 string[]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.ethereum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="二、dapp-与-波宝-trx-钱包授权、交互" tabindex="-1">二、DApp 与 波宝（TRX）钱包授权、交互 <a class="header-anchor" href="#二、dapp-与-波宝-trx-钱包授权、交互" aria-label="Permalink to &quot;二、DApp 与 波宝（TRX）钱包授权、交互&quot;">​</a></h2><p><a href="https://developers.tron.network/docs" target="_blank" rel="noreferrer">波宝文档</a></p><p><a href="https://cn.developers.tron.network/reference#tronweb-object" target="_blank" rel="noreferrer">TronWeb对象 API</a></p>`,10),p=[t];function l(h,k,r,d,c,o){return i(),a("div",null,p)}const y=s(e,[["render",l]]);export{g as __pageData,y as default};
